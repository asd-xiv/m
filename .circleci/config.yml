# CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2.1

# Executors - https://circleci.com/docs/2.0/executor-intro/
#
# The underlying technology or environment in which to run a job

executors:
  gitleaks:
    docker:
      - image: zricethezav/gitleaks:latest
  node-lts:
    docker:
      - image: cimg/node:16.x
  node-18:
    docker:
      - image: cimg/node:18.x

# Jobs - https://circleci.com/docs/2.0/configuration-reference/#jobs
#
# Atomic parts of the pipeline that will be composed and configured in one or
# more Workflows

jobs:
  detect-secrets:
    executor: gitleaks
    working_directory: &JOB_WORKING_DIR "~/m"
    steps:
      - checkout
      - run:
          name: "[gitleaks] Detect secrets in repository history"
          command: |
            gitleaks detect --redact --verbose
      - persist_to_workspace:
          root: &WORKSPACE_ROOT "~/"
          paths:
            - m

  setup:
    executor: node-lts
    working_directory: *JOB_WORKING_DIR
    steps:
      - attach_workspace:
          at: *WORKSPACE_ROOT
      - restore_cache:
          name: '[circleci] Restore cached "node_modules" folder'
          key:
            &CACHE_KEY_NODE_MODULES 'm-v2-{{ arch }}-{{ checksum
            "package-lock.json" }}'
      - run:
          name: "[npm]: Install packages"
          command: |
            node -v && npm -v
            npm run setup
      - save_cache:
          paths:
            - node_modules
          key: *CACHE_KEY_NODE_MODULES
      - persist_to_workspace:
          root: *WORKSPACE_ROOT
          paths:
            - m

  test:
    parameters:
      node-version:
        type: string
    executor: node-<< parameters.node-version >>
    working_directory: *JOB_WORKING_DIR
    steps:
      - attach_workspace:
          at: *WORKSPACE_ROOT
      - run:
          name: "[eslint, markdownlint]: Lint"
          command: |
            npm run lint
      - run:
          name: "[tape]: Unit tests"
          command: "npm test"

  submit-coverage:
    executor: node-lts
    working_directory: *JOB_WORKING_DIR
    steps:
      - attach_workspace:
          at: *WORKSPACE_ROOT
      - run:
          name: "[c8,coveralls]: Publish test coverage to Coveralls"
          command: "npm run coverage"

  release-npm:
    executor: node-lts
    working_directory: *JOB_WORKING_DIR
    steps:
      - attach_workspace:
          at: *WORKSPACE_ROOT
      - run:
          name: "[swc]: Compile application"
          command: |
            npm run build
      - run:
          name:
            "[semantic-release]: Update version, generate release, publish npm
            package"
          command: "npm run release"

# Workflows - https://circleci.com/docs/2.0/workflows/
#
# Treat workflows as a jobs/commands pipe:
# cmd1 -p1 lorem | cmd2 -foo bar | ... | cmdN)

workflows:
  release_latest:
    jobs:
      - detect-secrets:
          filters:
            branches:
              only: [master]
      - setup:
          requires: [detect-secrets]
      - test:
          name: "test_node-lts"
          requires: [setup]
          node-version: "lts"
      - test:
          name: "test_node-18"
          requires: [setup]
          node-version: "18"
      - submit-coverage:
          requires: [test_node-lts, test_node-18]
      - release-npm:
          requires: [test_node-lts, test_node-18]

  release_next:
    jobs:
      - detect-secrets:
          filters:
            branches:
              only: [next]
      - setup:
          requires: [detect-secrets]
      - test:
          name: "test_node-lts"
          requires: [setup]
          node-version: "lts"
      - test:
          name: "test_node-18"
          requires: [setup]
          node-version: "18"
      - submit-coverage:
          requires: [test_node-lts, test_node-18]
      - release-npm:
          requires: [test_node-lts, test_node-18]

  test_pr-branches:
    jobs:
      - detect-secrets:
          filters:
            branches:
              ignore: [master, next]
      - setup:
          requires: [detect-secrets]
      - test:
          name: "test_node-lts"
          requires: [setup]
          node-version: "lts"
      - test:
          name: "test_node-18"
          requires: [setup]
          node-version: "18"
